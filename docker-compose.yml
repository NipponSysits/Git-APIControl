#nginx: 
#  restart: always 
#  image: 'jwilder/nginx-proxy' 
#  hostname: nginx
#  container_name: nginx
#  ports: 
#    - '80:80' 
#    - '443:443' 
#  volumes: 
#    - '/app/nginx/vhost.d:/etc/nginx/vhost.d' 
#    - '/app/nginx/html:/usr/share/nginx/html' 
#    - '/app/nginx/certs:/etc/nginx/certs:ro' 
#    - '/app/nginx/conf.d:/etc/nginx/conf.d' 
#    - '/var/run/docker.sock:/tmp/docker.sock:ro' 
#  environment: 
#    - TZ=Asia/Bangkok 
#lets: 
#  restart: always 
#  image: jrcs/letsencrypt-nginx-proxy-companion 
#  hostname: lets
#  container_name: lets
#  volumes_from: 
#    - nginx 
#  volumes: 
#    - '/app/nginx/certs:/etc/nginx/certs:rw' 
#    - '/var/run/docker.sock:/var/run/docker.sock:ro' 
#  links: 
#    - nginx 
#  environment: 
#    - TZ=Asia/Bangkok


mongodb:
  restart: always
  image: sameersbn/mongodb:latest
#  hostname: mongodb
#  ports:
#    - "20400:27017"
  volumes:
    - /app/mongodb:/var/lib/mongodb
  environment:
    - TZ=Asia/Bangkok
mysql:
  restart: always
  image: mysql/mysql-server:5.7
#  hostname: mysql
#  ports:
#    - "20410:3306"
  volumes:
    - /app/mysql/data:/var/lib/mysql
    - /app/mysql/mysql.cnf:/etc/mysql/my.cnf
  environment:
    - MYSQL_USER=debugerr
    - MYSQL_ROOT_PASSWORD=!deBUG_Error
    - TZ=Asia/Bangkok
redis:
  restart: always
  image: redis:3.0.7
  hostname: redis
# ports:
#   - "6379:6379"
  volumes:
    - /app/redis/data:/data
    - /app/redis/redis.cnf:/usr/local/etc/redis/redis.conf
  environment: 
    - TZ=Asia/Bangkok

sentinel:
  restart: always
  image: node:5.10.0
  hostname: sentinel
  container_name: sentinel
  command: node /data/app/app.js
  links:
    - mysql:local-mysql
    - mongodb:local-mongodb
#    - debugerr:local-web
#  extra_hosts:
#    - "mail.ns.co.th:192.168.10.2"
  ports:
    - '80:810'
#    - '811:811'
  volumes:
    - '/data/app-sentinel:/data/app'
    - '/data/debugerr-source:/data/source'
    - '/data/debugerr-package:/data/package'
    - '/data/debugerr-content:/data/content'
  environment:
    - TZ=Asia/Bangkok

debugerr:
  restart: always
  image: node:0.10.44
  hostname: debugerr
  container_name: debugerr
  command: node /app/bundle/main.js
  links:
    - mysql:local-mysql
    - mongodb:local-mongodb
    - sentinel:local-sentinel
#  ports:
#    - '8220:3000'
  volumes:
    - '/data/app-bundle:/app'
  environment:
#    - ROOT_URL=http://dev.ns.co.th
    - MONGO_URL=mongodb://local-mongodb:27017/debugerr
    - METEOR_SETTINGS={ "production":true, "public":{}, "private":{}, "mysql":{} }
    - METEOR_CONFIG=default
    - PORT=3000
    - TZ=Asia/Bangkok