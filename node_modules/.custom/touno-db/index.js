const q 				= require('q');
const mysql 		= require('mysql');
const mysqlWrap = require('mysql-wrap');
const config 		= require('.custom/config');
const mongoose 	= require('mongoose');

var mysql = {
  connect: function(cn) {
    cn = cn || {};
    const pool = mysql.createPool({
      connectionLimit: cn.connLimit || config.mysql.connLimit || 10000,
      host: cn.host || config.mysql.host || 'localhost',
      port: cn.port || config.mysql.port || 3306,
      database: cn.database || config.mysql.database || 'mysql',
      user: cn.user || config.mysql.user || 'root',
      password: cn.password || config.mysql.password || '',
      debug: cn.debug || config.mysql.debug || false,
      supportBigNumbers: true,
      timezone:'+7:00',
      dateStrings:true,
      queryFormat: function (query, values) {
        if (!values) {
          return query;
        }
        return query.replace(/\:(\w+)/g, function (txt, key) {
          if (values.hasOwnProperty(key)) {
            return this.escape(values[key]);
          }
          return txt;
        }.bind(this));
      }
    });
    return mysqlWrap(pool);
  }
}

const SchemaCommiter = mongoose.Schema({
  commit_id: String,
  user_id: String,
  repository_id: String,
  since: String
});

const SchemaCommitLogs = mongoose.Schema({
  name: String
});



var db = {
	Commiter: mongoose.model('Commiter', SchemaCommiter),
	CommitLogs: mongoose.model('CommitLogs', SchemaCommitLogs),
}

var mongo = function(schema){

	var silence = new Kitten({ name: 'Silence' });
	console.log(silence.name); // 'Silence'

	silence.save(function (err, silence) {
	  if (err) return console.error(err);
		console.log(silence); // 'Silence'
	  
	});
	Kitten.find({ name: /^Fluff/ }, function (err, kittens) {
	  if (err) return console.error(err);
	  console.log(kittens);
	});
	// Kitten.find(function (err, kittens) {
	//   if (err) return console.error(err);
	//   console.log(kittens);
	// })

}

module.exports = {
	mysql: mysql,
	mongo: mongo
}